% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/json_structure.r
\name{json_structure}
\alias{json_structure}
\title{Recursively structures arbitrary JSON data into a single data.frame}
\usage{
json_structure(x)
}
\arguments{
\item{x}{a json string or a tbl_json object}
}
\value{
a tbl_json object with the following columns:

  \code{document.id} 1L if \code{x} is a single JSON string, otherwise the
  index of \code{x}.

  \code{parent.id} the string identifier of the parent node for this child.

  \code{level} what level of the hierarchy this child resides at, starting
  at \code{0L} for the root and incrementing for each level of nested
  array or object.

  \code{index} what index of the parent object / array this child resides
  at (from \code{gather_array} for arrays).

  \code{child.id} a unique ID for this leaf in this document, represented
  as <parent>.<index> where <parent> is the ID for the parent and <index>
  is this index.

  \code{seq} the sequence of keys / indices that led to this child
  (parents that are arrays are excluded) as a list, where character strings
  denote objects and integers denote array positions

  \code{key} if this is the value of an object, what was the key that it
  is listed under (from \code{gather_keys}).

  \code{type} the type of this object (from \code{json_types}).

  \code{length} the length of this object (from \code{json_lengths}).
}
\description{
Returns a \code{tbl_json} object where each row corresponds to a leaf in
the JSON structure. The first row corresponds to the json document as
a whole. If the document is a scalar value (JSON string, number, logical
or null), then there will only be 1 row. If instead it is an object or
an array, then subsequent rows will recursively correspond to the elements
(and their children) of the object or array.
}
\examples{

# A simple string
'"string"' \%>\% json_structure

# A simple object
'{"key": "value"}' \%>\% json_structure

# A complex array
'[{"a": 1}, [1, 2], "a", 1, true, null]' \%>\% json_structure
}

