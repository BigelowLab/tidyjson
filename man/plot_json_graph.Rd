% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_json_graph.R
\name{plot_json_graph}
\alias{plot_json_graph}
\title{Plots an igraph visualization of a single json document}
\usage{
plot_json_graph(.x, legend = TRUE, vertex.size = 6, edge.color = "grey70",
  edge.width = 0.5, show.labels = TRUE, plot = TRUE, ...)
}
\arguments{
\item{.x}{a json string or tbl_json object}

\item{legend}{add a type color legend automatically}

\item{vertex.size}{the size of the vertices (helpful to reduce this if the
json is very complex}

\item{edge.color}{the color for the edges}

\item{edge.width}{the width of the edge lines, helpful to reduce this if
the json is very complex}

\item{show.labels}{should object names be shown}

\item{plot}{should the plot be rendered?}

\item{...}{further arguments to igraph::plot.igraph}
}
\value{
the igraph object
}
\description{
This function first calls json_structure, and then uses that data to create
an igraph object, and then plots that object.
}
\details{
Each dot on the plot corresponds to a node in the JSON document, which
could include an object or an array (which will have children nodes) or
a string, number, logical or null value which will be terminal nodes. The
graph connects parent nodes to child nodes, and the vertices are colored
based on json_types.

If show.labels is TRUE, then the names for object values are plotted on
the value node.

If you have a very large document (json_complexity larger than a few
hundred), you should consider setting show.labels to FALSE, and reducing
the vertex.size and edge.width. Documents that are even more complex may
need to be broken into smaller chunks to be visualized effectively.

Note that the legend is plotted automatically, but may not be scaled
correctly. Set legend to FALSE and manually create your own legend if
you wish to reposition it.

Also note that this function sets the plot margins to zero in order to
maximize the size of the graph on the page. the par() is reset afterwards.
}
\examples{

# An illustrative example
'{"object" : {"key": 1},
  "array"  : ["a", "b"],
  "string" : "value",
  "number" : 1,
  "logical": true,
  "null"   : null
 }' \%>\% plot_json_graph

# a more complex real example
worldbank[1] \%>\% plot_json_graph

# a very complex real example
companies[1] \%>\% plot_json_graph(show.labels = FALSE, vertex.size = 4)

}

